{
  "title": "来点硬货，从0到1教你怎么用Docker部署自己的APP",
  "url": "https://mp.weixin.qq.com/s/OMtb1DL_ik2TvENzWHWGsg",
  "content": "1. 前言\n以前我们开发APP时候总会遇到一个问题, 自己的app在开发环境好不容易调通开发好了， 但是到了另外一台机器里重新部署时遇到各种硬件软件版本不兼容，导致很难快速部署到新机器。存在环境不一致，依赖管理复杂，资源利用率低，部署复杂问题。 \n\n而docker通过容器化技术的环境标准化，轻量级，快速部署，可移植的方式解决这些问题。下面快速介绍一下docker的一些概念。\n\ndocker image镜像： \n\n镜像是一个只读的模板，包含了运行应用所需的所有内容：代码、运行时、库文件、环境变量和配置文件 \ndocker container实例：  \n\n容器是镜像的运行实例，是一个轻量级、可移植的执行环境\ndocker registry：\n\n仓库注册服务器，如 Docker Hub\ndocker repository：\n\n仓库是存储和分发镜像的地方，可以包含一个镜像的多个版本\ndocker-compose（组件）\n docker-compose 负责按照docker-compose.yml配置来把多个不同的container组合起来。相当于一条流水线。\ndocker-machine:  \n\n它可以在虚拟主机上安装 Docker 的工具和集中管理所有的 docker 主机，比如快速的给 100 台服务器安装上 docker\ndocker-swarm: \n\nDocker-swarm 是集群管理工具。 swarm 集群由管理节点（manager）和工作节点（work node）构成。 docker-machine 管理的是机器， 而swarm是管理这些机器里面的服务应用\n\n\n打个比方， 假设我们要造一个手机工厂，那么image就相当于这台手机工厂流水线规格配置信息(像用到什么机器，零件等等)， 然后我们要按照这配置信息去采购机器。 \n而我们要收集这些采购机器时整理的记录采购源头的信息表就是registry注册服务，而存放这些机器的店铺就是repository。 等我们收集完这些设备后就会放到我们自己工厂(机器)里，这些能运作的设备就是我们的container 实例。而docker-compose 在负责在这个把这些设备串联起来得到一个真正的流水线。\n当我们的手机销量不错，想要扩大生成规模新增多几个工厂(机器)时，我们可以用docker-machine 去创建和管理新的工厂。为了能更好的控制和监控每个工厂里面的流水线，我们可以用docker-swarm去管理每个工厂里手机流水线生产的状态。\n\n\ndocker架构图\n\n\n下面内容会从 docker 的安装，docker 镜像容器的构建和调用，以及进入容器debug去展开实践。\n\n\n2. Docker 安装\n2.1 Window wsl Ubuntu环境安装docker\nsudo apt-get install docker docker-compose\n\n\n\n\nwsl手动安装(推荐)\n\n如果window wsl会因为各种网络问题和安装包问题下载不了， 可以用下面的手动安装\n\n从下面链接仓库里面下载以下文件\n\n\n\n\nhttps://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/\n\n\n\n\ncontainerd.io_1.7.27-1_amd64.deb\ndocker-buildx-plugin_0.10.2-1~ubuntu.22.04~jammy_amd64.deb\ndocker-ce-cli_28.3.2-1~ubuntu.22.04~jammy_amd64.deb\ndocker-ce-rootless-extras_28.3.2-1~ubuntu.22.04~jammy_amd64.deb\ndocker-ce_28.3.2-1~ubuntu.22.04~jammy_amd64.deb\ndocker-compose-plugin_2.6.0~ubuntu-jammy_amd64.deb\n\n直接通过下面代码下载\n\nwget https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/containerd.io_1.7.27-1_amd64.deb\nwget https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/docker-buildx-plugin_0.10.2-1~ubuntu.22.04~jammy_amd64.deb\nwget https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/docker-ce-cli_28.3.2-1~ubuntu.22.04~jammy_amd64.deb\nwget https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/docker-ce-rootless-extras_28.3.2-1~ubuntu.22.04~jammy_amd64.deb\nwget https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/docker-ce_28.3.2-1~ubuntu.22.04~jammy_amd64.deb\nwget https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/docker-compose-plugin_2.6.0~ubuntu-jammy_amd64.deb\n\n\n\n\n安装命令\n\n这里先更新下ubuntu里面环境\n\nsudo apt-get update\nsudo apt-get install -y dbus-user-session\n\n用dpkg 安装docker 包\n\nsudo dpkg -i containerd.io_1.7.27-1_amd64.deb\nsudo dpkg -i docker-buildx-plugin_0.10.2-1~ubuntu.22.04~jammy_amd64.deb\nsudo dpkg -i docker-ce-cli_28.3.2-1~ubuntu.22.04~jammy_amd64.deb\nsudo dpkg -i docker-ce-rootless-extras_28.3.2-1~ubuntu.22.04~jammy_amd64.deb\nsudo dpkg -i docker-ce_28.3.2-1~ubuntu.22.04~jammy_amd64.deb\nsudo dpkg -i docker-compose-plugin_2.6.0~ubuntu-jammy_amd64.deb\n\n安装上面的包后， 重启下服务进行测试。 这里将自己用户加到docker组然后重启docker， 这样后面就不用因为权限问题经常要 sudo 跑docker\n\n# 将用户加入docker组\nsudo usermod -aG docker $USER\nnewgrp  docker\n# 立即生效\n# 启动服务\nsudo systemctl  enable docker\nsudo systemctl start  docker\n\n\n\n\n常见问题\n\n重新配置未完成的安装\n\n运行以下命令修复中断的安装：\n\nsudo dpkg --configure -a\n可选：设置rootless模式\n\n如果需要使用rootless模式：\n\ndockerd-rootless-setuptool.sh  install\n需要完全重新安装\nsudo apt purge docker-ce*\nsudo rm -rf /var/lib/docker\nsudo apt autoremove\n# 然后重新按照上面步骤安装\n\n\n2.2 Ubuntu系统环境安装Docker\n官方下载安装脚本\n# 下载并执行Docker官方安装脚本\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\n\n\n# 启动Docker服务\nsudo systemctl start docker\nsudo systemctl enable docker\n\n\n\n\n3. Docker代理配置\n有时候因为在网络问题拉取不了，需要配置docker代理服务解决\nsudo mkdir -p /etc/systemd/system/docker.service.d\nsudo touch /etc/systemd/system/docker.service.d/http-proxy.conf\n然后在\nsudo vi /etc/systemd/system/docker.service.d/http-proxy.conf\n在http-proxy.conf里面配置代理ip, 注意一点，在WSL环境里， 一定要注意这里的代理ip地址会不会自动发生变化，如果代理ip变了要及时修改。 不然容易docker了老半天都连不上去\n[Service]\nEnvironment=\"HTTP_PROXY=http://服务端主机IP:VPN服务端口号\"\nEnvironment=\"HTTPS_PROXY=http://服务端主机IP:VPN服务端口号\"\nEnvironment=\"NO_PROXY=localhost,127.0.0.1\"\n\n\n重新加载docker代理配置 + 重启docker服务\nsudo systemctl daemon-reload\nsudo systemctl restart docker\ndocker 测试\ndocker pull ubuntu\n#查看docker image\ndocker image ls\n\n\n校验代理是否生效\ndocker info | grep -i proxy\n关闭代理\nunset HTTP_PROXY HTTPS_PROXY\ndocker build -t your-image-name .\n\n\n4. Docker命令学习\ndocker run 运行容器\ndocker ps 列出正在运行的容器\ndocker build 构建 Docker 镜像\ndocker exec 在容器中执行命令\n这里我偷点懒，可以自己去问问Deepseek更多docker命令\n\n\n5. 配置自己的Docker镜像\n\nDockerfile 是一个文本文件，包含了构建 Docker 镜像的所有指令, docker怎么构建的配置都写到dockerfile里面。\n\n5.1 Dockerfile 例子\nFROM nginx\nRUN echo '这是一个本地构建的nginx镜像' > /usr/share/nginx/html/index.html\n构建自己的docker镜像\ndocker build -t nginx:v3 .\n运行自己的镜像\n-p 代表实例的端口映射， 8080代表本机端口， 80代表container程序自己内部端口。 \n-d 代表后台运行实例\n# 启动容器（带端口映射）\ndocker run -d -p 8080:80 --name my-nginx nginx:v3\n# 验证访问\ncurl -I http://localhost:8080\n# 应返回 HTTP 200 响应\n# 查看日志\ndocker logs my-nginx\nrun之后 会创建container 实例, 可以通过 下面语句查看container\ndocker ps\n查看结果\n\n\n5.2 代理问题\n如果遇到下面报错， 那就大概率是docker跑的时候因为网络问题访问不了镜像仓库。\nERROR: failed to solve: failed to fetch anonymous token: Get \"https://auth.docker.io/token?scope=repository%3Alibrary%2Fnginx%3Apull&service=registry.docker.io\": proxyconnect tcp: dial tcp 你的ip:7890: connect: no route to host\n解决方法是要么本地开代理先把镜像拉下来再build或者在dockerfile 指定代理地址\n# 声明构建参数（代理地址）\nARG HTTP_PROXY\nARG HTTPS_PROXY\n# 将代理参数转为环境变量（可选）\nENV HTTP_PROXY=${HTTP_PROXY}\nENV HTTPS_PROXY=${HTTPS_PROXY}\n然后build的时候把代理ip传参进去\ndocker build \\\n  --build-arg HTTP_PROXY=\"http://<代理ip>:7890\" \\\n  --build-arg HTTPS_PROXY=\"http://<代理ip>:7890\" \\\n  -t my-app .\n\n\n5.3 拉取git 私有库例子\n要拉取git私有库的话一般需要用到ssh key， 这里需要定义ssh key变量然后从 build的时候传参进去\nFROM python:3.10-slim\n\n\n# 安装 Git 和 SSH 客户端\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends git openssh-client && \\\n    rm -rf /var/lib/apt/lists/*\n\n\n# 配置 SSH 代理（通过 build-arg 传入密钥）\nARG SSH_PRIVATE_KEY\nRUN mkdir -p ~/.ssh && \\\n    echo \"${SSH_PRIVATE_KEY}\" > ~/.ssh/id_rsa && \\\n    chmod 600 ~/.ssh/id_rsa && \\\n    ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n\n# 克隆私有仓库\nRUN git clone git@github.com:your/private-repo.git /app\n\n\n# 后续步骤...\ndocker build \\\n  --build-arg SSH_PRIVATE_KEY=\"$(cat ~/.ssh/id_rsa)\" \\\n  --build-arg HTTP_PROXY=\"http://127.0.0.1:7890\" \\\n  -t private-app .\n\n\n6. Docker-Compose 搭建自己多个服务\nDockerfile镜像搭建的是单个服务， 如果要同时搭建多个服务， 比如一个容器负责web端，一个容器负责SQL数据库， 还有一个负责redis， 那么就需要用到Docker-Compose去管理。\n Compose 是用于定义和运行多容器 Docker 应用程序的工具。可以简单通过YML 文件来配置应用程序需要的所有服务。\n6.1 下载docker-compose\n sudo apt-get install docker-compose\n遇到网络问题， 可以换成阿里云镜像下载试试\n#官方镜像\nsudo curl -L \"https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n\n\nsudo chmod +x /usr/local/bin/docker-compose\n#国内镜像\n\n\nsudo curl -L \"https://mirrors.aliyun.com/docker-toolbox/linux/compose/latest/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n\n\n6.2 下面以Redis 请求例子为例\n先拉取docker依赖的基础python 环境\n docker pull python:3.9-slim\n\n\n创建自己的代码\n项目目录结构如下\n其中调用关系: \ndocker-compose 调用docker-compose.yml\ndocker-compose.yml里面 web 服务里的 build . 会依赖 ./Dockerfile 文件去构建app.py 的python服务\nweb服务通过 depends_on 依赖 redis 服务\nredis服务依赖镜像: redis:alpine\nmyapp/\n├── app.py\n├── requirements.txt\n├── Dockerfile\n└── docker-compose.yml\n进入myapp 文件后生成下下面的文件\ndocker-compose.yml\nservices:\n  web:\n    build: .\n    ports:\n      - \"5000:5000\"\n    depends_on:\n      - redis\n\n\n  redis:\n    image: redis:alpine\n    volumes:\n      - redis_data:/data\n\n\nvolumes:\n  redis_data:\n服务器文件app.py\nfrom flask import Flask\nimport redis\n\n\napp = Flask(__name__)\ncache = redis.Redis(host='redis', port=6379)\n\n\n@app.route('/')\ndef hello():\n    count = cache.incr('hits')\n    return f'Hello! 访问次数: {count}'\nrequirements.txt\nflask\nredis\nDockerfile文件\nFROM python:3.9-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\nCOPY . .\nCMD [\"gunicorn\", \"-b\", \"0.0.0.0:5000\", \"app:app\"]\n\n\nDocker-compose启动服务\n# 启动服务\ndocker-compose up -d\n\n\n# 查看运行状态\ndocker-compose ps\n\n\n# 测试访问\ncurl http://localhost:5000\n\n\n# 停止服务\ndocker-compose down\n如果docker构建期间出现问题， 修复代码问题后通过下面命令重启\ndocker-compose down && docker-compose build --no-cache && docker-compose up\n构建完成截图\n服务起来后， 查看各个容器的IP\n# 列出所有容器及其IP\ndocker ps -q | xargs -n 1 docker inspect -f '{{.Name}} {{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' | sed 's#^/##'\n\n\n# 示例输出：\n# container1 172.17.0.2\n# container2 172.18.0.3\n\n服务测试\ncurl http://localhost:5000\ncurl 请求一下绑定的端口，成功了\n进入容器里debug\n#通过docker ps 查看容器\ndocker ps\n\n\n# 通过 exec -it 进入互动模式进入 容器\n\n\ndocker exec -it test_redis bash\n\n\n\n\n7. 参考\n\nhttps://www.runoob.com/docker/docker-compose.html\n\nhttps://cloud.tencent.com/developer/article/2242444\n\nhttps://www.runoob.com/docker/docker-image-usage.html\n\nhttps://developer.aliyun.com/article/1582169",
  "html": "<section style=\"text-align: center; visibility: visible;\" nodeleaf=\"\"><img data-src=\"https://mmbiz.qpic.cn/sz_mmbiz_png/wzA5piakzWmAO3cqCFA3A3lxzaJiceqhiaO2n1fFJ27EbWJsNmpOia6PAXRh2sE7TsoX7ia1qwRMR8ZWxTv3B9FBxbw/640?wx_fmt=png&amp;from=appmsg&amp;watermark=1#imgIndex=0\" class=\"rich_pages wxw-img\" data-ratio=\"0.48055555555555557\" data-s=\"300,640\" data-type=\"png\" data-w=\"1080\" type=\"block\" data-imgfileid=\"100000081\" data-original-style=\"null\" data-index=\"1\" src=\"https://mmbiz.qpic.cn/sz_mmbiz_png/wzA5piakzWmAO3cqCFA3A3lxzaJiceqhiaO2n1fFJ27EbWJsNmpOia6PAXRh2sE7TsoX7ia1qwRMR8ZWxTv3B9FBxbw/640?wx_fmt=png&amp;from=appmsg&amp;watermark=1&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1#imgIndex=0\" _width=\"677px\" style=\"height: auto !important; visibility: visible !important; width: 676.969px !important;\" alt=\"图片\" data-report-img-idx=\"0\" data-fail=\"0\"></section><section style=\"visibility: visible;\"><span leaf=\"\" mpa-font-style=\"mdl88yuw161k\" style=\"font-size: 20px; visibility: visible;\" data-mpa-action-id=\"mdl88yv3ffu\" data-pm-slice=\"0 0 []\"><br style=\"visibility: visible;\"></span></section><section style=\"visibility: visible;\"><span leaf=\"\" mpa-font-style=\"mdl88yuw161k\" style=\"font-size: 20px; visibility: visible;\" data-mpa-action-id=\"mdl88yv3ffu\" data-pm-slice=\"0 0 []\"><span textstyle=\"\" style=\"color: rgb(0, 128, 255); font-weight: bold; visibility: visible;\">1. 前言</span></span></section><hr style=\"border-style: solid; border-width: 1px 0px 0px; border-color: rgba(0, 0, 0, 0.1); transform-origin: 0px 0px; transform: scale(1, 0.5); visibility: visible;\"><section style=\"visibility: visible;\"><span leaf=\"\" style=\"visibility: visible;\">以前我们开发APP时候总会遇到一个问题, 自己的app在开发环境好不容易调通开发好了， 但是到了另外一台机器里重新部署时遇到各种硬件软件版本不兼容，导致很难快速部署到新机器。存在</span><span leaf=\"\" style=\"visibility: visible;\">环境不一致，</span><span leaf=\"\" style=\"visibility: visible;\">依赖管理复杂，</span><span leaf=\"\" style=\"visibility: visible;\">资源利用率低，部署复杂问题。&nbsp;</span><span leaf=\"\" style=\"visibility: visible;\"><br style=\"visibility: visible;\"></span></section><section style=\"visibility: visible;\"><span leaf=\"\" style=\"visibility: visible;\">而docker通过容器化技术的</span><span leaf=\"\" style=\"visibility: visible;\">环境标准化，</span><span leaf=\"\" style=\"visibility: visible;\">轻量级，</span><span leaf=\"\" style=\"visibility: visible;\">快速部署，可移植的方式解决这些问题</span><span leaf=\"\" style=\"visibility: visible;\">。下面快速介绍一下docker的一些概念。</span><span leaf=\"\" style=\"visibility: visible;\"><br style=\"visibility: visible;\"></span></section><ul style=\"list-style-type: disc;\" class=\"list-paddingleft-1\"><li><section><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: bold;\">docker image镜像</span>：&nbsp;</span><span leaf=\"\"><br></span></section><section><span leaf=\"\">镜像是一个只读的模板，包含了运行应用所需的所有内容：代码、运行时、库文件、环境变量和配置文件</span><span leaf=\"\">&nbsp;</span></section></li><li><section><section><span leaf=\"\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;section&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]\"><span textstyle=\"\" style=\"font-weight: bold;\">docker container实例</span>： &nbsp;</span><span leaf=\"\"><br></span></section></section><section><section><span leaf=\"\">容器是镜像的运行实例，是一个轻量级、可移植的执行环境</span></section></section></li><li><section><section><section><span leaf=\"\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;section&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]\"><span textstyle=\"\" style=\"font-weight: bold;\">docker registry：</span></span><span leaf=\"\"><br></span></section></section></section><section><section><section><span leaf=\"\">仓库注册服务器，如 Docker Hub</span></section></section></section></li><li><section><section><section><section><span leaf=\"\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;section&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]\"><span textstyle=\"\" style=\"font-weight: bold;\">docker repository</span>：</span><span leaf=\"\"><br></span></section></section></section></section><section><section><section><section><span leaf=\"\">仓库是存储和分发镜像的地方，可以包含一个镜像的多个版本</span></section></section></section></section></li><li><section><section><section><section><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: bold;\">docker-compose（组件）</span></span></section></section></section></section><section><section><section><section><span leaf=\"\">&nbsp;docker-compose 负责按照docker-compose.yml配置来把多个不同的container组合起来。相当于一条流水线。</span></section></section></section></section></li><li><section><section><section><section><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: bold;\">docker-machine: &nbsp;</span></span><span leaf=\"\"><br></span></section></section></section></section><section><section><section><section><span leaf=\"\">它可以在虚拟主机上安装 Docker 的工具和集中管理所有的 docker 主机，比如快速的给 100 台服务器安装上 docker</span></section></section></section></section></li><li><section><section><section><section><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: bold;\">docker-swarm:&nbsp;</span></span><span leaf=\"\"><br></span></section></section></section></section><section><section><section><section><span leaf=\"\">Docker-swarm 是集群管理工具。&nbsp;</span><span leaf=\"\">swarm 集群由管理节点（manager）和工作节点（work node）构成。 docker-machine 管理的是机器， 而swarm是管理这些机器里面的服务应用</span></section></section></section></section></li></ul><section><span leaf=\"\"><br></span></section><section><span leaf=\"\">打个比方， 假设我们要造一个手机工厂，那么image就相当于这台手机工厂流水线规格配置信息(像用到什么机器，零件等等)， 然后我们要按照这配置信息去采购机器。&nbsp;</span></section><section><span leaf=\"\">而我们要收集这些采购机器时整理的记录采购源头的信息表就是registry注册服务，而存放这些机器的店铺就是repository。 等我们收集完这些设备后就会放到我们自己工厂(机器)里，这些能运作的设备就是我们的container 实例。而docker-compose 在负责在这个把这些设备串联起来得到一个真正的流水线。</span></section><section><span leaf=\"\">当我们的手机销量不错，想要扩大生成规模新增多几个工厂(机器)时，我们可以用docker-machine 去创建和管理新的工厂。为了能更好的控制和监控每个工厂里面的流水线，我们可以用docker-swarm去管理每个工厂里手机流水线生产的状态。</span></section><section><span leaf=\"\" mpa-font-style=\"mdl88yuw161k\" style=\"font-size: 20px;\" data-mpa-action-id=\"mdl88yv3ffu\" data-pm-slice=\"0 0 []\"><br></span></section><section><span leaf=\"\" mpa-font-style=\"mdllr3lvvoa\" style=\"font-size: 17px;\" data-mpa-action-id=\"mdllr3m6q99\" data-pm-slice=\"0 0 []\">docker架构图</span></section><section style=\"text-align: center;\" nodeleaf=\"\"><img data-src=\"https://mmbiz.qpic.cn/sz_mmbiz_png/wzA5piakzWmAO3cqCFA3A3lxzaJiceqhiaOHNycfiaodLjKibF9ngiac57egLgOGDv2vQRvok530KJDa9LNJ8MGvVC3g/640?wx_fmt=png&amp;from=appmsg&amp;watermark=1#imgIndex=1\" class=\"rich_pages wxw-img js_img_placeholder wx_img_placeholder\" data-ratio=\"0.4842592592592593\" data-s=\"300,640\" data-type=\"png\" data-w=\"1080\" type=\"block\" data-imgfileid=\"100000079\" data-original-style=\"null\" data-index=\"2\" src=\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E\" _width=\"677px\" style=\"width: 677px !important; height: 327.844px !important;\" alt=\"图片\"></section><section><span leaf=\"\"><br></span></section><section><span leaf=\"\">下面内容会从 docker 的安装，docker 镜像容器的构建和调用，以及进入容器debug去展开实践。</span></section><section><span leaf=\"\"><br></span></section><section><span leaf=\"\" mpa-font-style=\"mdl88pvt18m4\" style=\"font-size: 20px;\" data-mpa-action-id=\"mdl88pw01ut9\" data-pm-slice=\"0 0 []\"><span textstyle=\"\" style=\"color: rgb(0, 128, 255);font-weight: bold;\">2. Docker 安装</span></span></section><hr style=\"border-style: solid;border-width: 1px 0 0;border-color: rgba(0,0,0,0.1);-webkit-transform-origin: 0 0;-webkit-transform: scale(1, 0.5);transform-origin: 0 0;transform: scale(1, 0.5);\"><section><span leaf=\"\" mpa-font-style=\"mdlntgxi2147\" style=\"font-size: 17px;\" data-mpa-action-id=\"mdlntgxt4ow\" data-pm-slice=\"0 0 []\"><span textstyle=\"\" style=\"font-weight: bold;\">2.1 Window wsl Ubuntu环境安装docker</span></span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"cs\"><code><span leaf=\"\">sudo apt-<span class=\"code-snippet__keyword\">get</span>&nbsp;install docker docker-compose</span></code></pre></section><p><span leaf=\"\"><br></span></p><p><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: bold;\">wsl手动安装(推荐)</span></span></p><p><span leaf=\"\">如果window wsl会因为各种网络问题和安装包问题下载不了， 可以用下面的手动安装</span></p><p><span leaf=\"\">从下面链接仓库里面下载以下文件</span></p><p><span leaf=\"\"><br></span></p><p><span leaf=\"\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]\">https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/</span></p><p><span leaf=\"\"><br></span></p><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"apache\"><code><span leaf=\"\"><span class=\"code-snippet__attribute\">containerd</span>.io_1.<span class=\"code-snippet__number\">7</span>.<span class=\"code-snippet__number\">27</span>-<span class=\"code-snippet__number\">1</span>_amd64.deb</span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">docker</span>-buildx-plugin_0.<span class=\"code-snippet__number\">10</span>.<span class=\"code-snippet__number\">2</span>-<span class=\"code-snippet__number\">1</span>~ubuntu.<span class=\"code-snippet__number\">22</span>.<span class=\"code-snippet__number\">04</span>~jammy_amd64.deb</span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">docker</span>-ce-cli_28.<span class=\"code-snippet__number\">3</span>.<span class=\"code-snippet__number\">2</span>-<span class=\"code-snippet__number\">1</span>~ubuntu.<span class=\"code-snippet__number\">22</span>.<span class=\"code-snippet__number\">04</span>~jammy_amd64.deb</span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">docker</span>-ce-rootless-extras_28.<span class=\"code-snippet__number\">3</span>.<span class=\"code-snippet__number\">2</span>-<span class=\"code-snippet__number\">1</span>~ubuntu.<span class=\"code-snippet__number\">22</span>.<span class=\"code-snippet__number\">04</span>~jammy_amd64.deb</span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">docker</span>-ce_28.<span class=\"code-snippet__number\">3</span>.<span class=\"code-snippet__number\">2</span>-<span class=\"code-snippet__number\">1</span>~ubuntu.<span class=\"code-snippet__number\">22</span>.<span class=\"code-snippet__number\">04</span>~jammy_amd64.deb</span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">docker</span>-compose-plugin_2.<span class=\"code-snippet__number\">6</span>.<span class=\"code-snippet__number\">0</span>~ubuntu-jammy_amd64.deb</span></code></pre></section><p><span leaf=\"\">直接通过下面代码下载</span></p><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"apache\"><code><span leaf=\"\"><span class=\"code-snippet__attribute\">wget</span>&nbsp;https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/containerd.io_1.<span class=\"code-snippet__number\">7</span>.<span class=\"code-snippet__number\">27</span>-<span class=\"code-snippet__number\">1</span>_amd64.deb</span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">wget</span>&nbsp;https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/docker-buildx-plugin_0.<span class=\"code-snippet__number\">10</span>.<span class=\"code-snippet__number\">2</span>-<span class=\"code-snippet__number\">1</span>~ubuntu.<span class=\"code-snippet__number\">22</span>.<span class=\"code-snippet__number\">04</span>~jammy_amd64.deb</span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">wget</span>&nbsp;https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/docker-ce-cli_28.<span class=\"code-snippet__number\">3</span>.<span class=\"code-snippet__number\">2</span>-<span class=\"code-snippet__number\">1</span>~ubuntu.<span class=\"code-snippet__number\">22</span>.<span class=\"code-snippet__number\">04</span>~jammy_amd64.deb</span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">wget</span>&nbsp;https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/docker-ce-rootless-extras_28.<span class=\"code-snippet__number\">3</span>.<span class=\"code-snippet__number\">2</span>-<span class=\"code-snippet__number\">1</span>~ubuntu.<span class=\"code-snippet__number\">22</span>.<span class=\"code-snippet__number\">04</span>~jammy_amd64.deb</span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">wget</span>&nbsp;https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/docker-ce_28.<span class=\"code-snippet__number\">3</span>.<span class=\"code-snippet__number\">2</span>-<span class=\"code-snippet__number\">1</span>~ubuntu.<span class=\"code-snippet__number\">22</span>.<span class=\"code-snippet__number\">04</span>~jammy_amd64.deb</span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">wget</span>&nbsp;https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/docker-compose-plugin_2.<span class=\"code-snippet__number\">6</span>.<span class=\"code-snippet__number\">0</span>~ubuntu-jammy_amd64.deb</span></code></pre></section><p><span leaf=\"\"><br></span></p><p><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: bold;\">安装命令</span></span></p><p><span leaf=\"\">这里先更新下ubuntu里面环境</span></p><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"sql\"><code><span leaf=\"\">sudo apt<span class=\"code-snippet__operator\">-</span><span class=\"code-snippet__keyword\">get</span>&nbsp;<span class=\"code-snippet__keyword\">update</span></span></code><code><span leaf=\"\">sudo apt<span class=\"code-snippet__operator\">-</span><span class=\"code-snippet__keyword\">get</span>&nbsp;install&nbsp;<span class=\"code-snippet__operator\">-</span>y dbus<span class=\"code-snippet__operator\">-</span><span class=\"code-snippet__keyword\">user</span><span class=\"code-snippet__operator\">-</span>session</span></code></pre></section><p><span leaf=\"\">用dpkg 安装docker 包</span></p><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"apache\"><code><span leaf=\"\"><span class=\"code-snippet__attribute\">sudo</span>&nbsp;dpkg -i containerd.io_1.<span class=\"code-snippet__number\">7</span>.<span class=\"code-snippet__number\">27</span>-<span class=\"code-snippet__number\">1</span>_amd64.deb</span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">sudo</span>&nbsp;dpkg -i docker-buildx-plugin_0.<span class=\"code-snippet__number\">10</span>.<span class=\"code-snippet__number\">2</span>-<span class=\"code-snippet__number\">1</span>~ubuntu.<span class=\"code-snippet__number\">22</span>.<span class=\"code-snippet__number\">04</span>~jammy_amd64.deb</span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">sudo</span>&nbsp;dpkg -i docker-ce-cli_28.<span class=\"code-snippet__number\">3</span>.<span class=\"code-snippet__number\">2</span>-<span class=\"code-snippet__number\">1</span>~ubuntu.<span class=\"code-snippet__number\">22</span>.<span class=\"code-snippet__number\">04</span>~jammy_amd64.deb</span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">sudo</span>&nbsp;dpkg -i docker-ce-rootless-extras_28.<span class=\"code-snippet__number\">3</span>.<span class=\"code-snippet__number\">2</span>-<span class=\"code-snippet__number\">1</span>~ubuntu.<span class=\"code-snippet__number\">22</span>.<span class=\"code-snippet__number\">04</span>~jammy_amd64.deb</span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">sudo</span>&nbsp;dpkg -i docker-ce_28.<span class=\"code-snippet__number\">3</span>.<span class=\"code-snippet__number\">2</span>-<span class=\"code-snippet__number\">1</span>~ubuntu.<span class=\"code-snippet__number\">22</span>.<span class=\"code-snippet__number\">04</span>~jammy_amd64.deb</span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">sudo</span>&nbsp;dpkg -i docker-compose-plugin_2.<span class=\"code-snippet__number\">6</span>.<span class=\"code-snippet__number\">0</span>~ubuntu-jammy_amd64.deb</span></code></pre></section><p><span leaf=\"\">安装上面的包后， 重启下服务进行测试。 这里将自己用户加到docker组然后重启docker， 这样后面就不用因为权限问题经常要 sudo 跑docker</span></p><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"bash\"><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 将用户加入docker组</span></span></code><code><span leaf=\"\">sudo usermod -aG docker&nbsp;<span class=\"code-snippet__variable\">$USER</span></span></code><code><span leaf=\"\">newgrp &nbsp;docker</span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 立即生效</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 启动服务</span></span></code><code><span leaf=\"\">sudo systemctl &nbsp;<span class=\"code-snippet__built_in\">enable</span>&nbsp;docker</span></code><code><span leaf=\"\">sudo systemctl start &nbsp;docker</span></code></pre></section><p><span leaf=\"\"><br></span></p><p><span leaf=\"\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]\"><span textstyle=\"\" style=\"font-weight: bold;\">常见问题</span></span></p><h3 style=\"font-weight: 600;font-size: 18.288px;line-height: 1.5;margin: 18.288px 0px 13.716px;color: rgb(64, 64, 64);font-family: quote-cjk-patch, Inter, system-ui, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Noto Sans&quot;, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, Oxygen, &quot;Open Sans&quot;, sans-serif;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;\" data-pm-slice=\"0 0 []\"><span leaf=\"\" mpa-font-style=\"mdl8yt9qhdt\" style=\"font-size: 17px;\" data-mpa-action-id=\"mdl8yt9x1qm8\" data-pm-slice=\"0 0 []\">重新配置未完成的安装</span></h3><p style=\"margin: 13.716px 0px;font-size: 16.002px;line-height: 28.575px;color: rgb(64, 64, 64);font-family: quote-cjk-patch, Inter, system-ui, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Noto Sans&quot;, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, Oxygen, &quot;Open Sans&quot;, sans-serif;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;\"><span leaf=\"\">运行以下命令修复中断的安装：</span></p><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"css\"><code><span leaf=\"\">sudo dpkg&nbsp;<span class=\"code-snippet__attr\">--configure</span>&nbsp;-<span class=\"code-snippet__selector-tag\">a</span></span></code></pre></section><h3 style=\"font-weight: 600;font-size: 18.288px;line-height: 1.5;margin: 18.288px 0px 13.716px;color: rgb(64, 64, 64);font-family: quote-cjk-patch, Inter, system-ui, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Noto Sans&quot;, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, Oxygen, &quot;Open Sans&quot;, sans-serif;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;\" data-pm-slice=\"0 0 []\"><span leaf=\"\" mpa-font-style=\"mdl8z0en1y2x\" style=\"font-size: 17px;\" data-mpa-action-id=\"mdl8z0evk08\" data-pm-slice=\"0 0 []\">可选：设置rootless模式</span></h3><p style=\"margin: 13.716px 0px;font-size: 16.002px;line-height: 28.575px;color: rgb(64, 64, 64);font-family: quote-cjk-patch, Inter, system-ui, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Noto Sans&quot;, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, Oxygen, &quot;Open Sans&quot;, sans-serif;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;\"><span leaf=\"\">如果需要使用rootless模式：</span></p><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"\"><code><span leaf=\"\">dockerd-rootless-setuptool.sh &nbsp;install</span></code></pre></section><h3 style=\"font-weight: 600;font-size: 18.288px;line-height: 1.5;margin: 18.288px 0px 13.716px;color: rgb(64, 64, 64);font-family: quote-cjk-patch, Inter, system-ui, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Noto Sans&quot;, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, Oxygen, &quot;Open Sans&quot;, sans-serif;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;\" data-pm-slice=\"0 0 []\" data-mpa-action-id=\"mdl8za1vzw\"><span mpa-font-style=\"mdl8za1pktt\" style=\"font-size: 17px;\"><span leaf=\"\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;p&quot;,&quot;attributes&quot;:{&quot;class&quot;:&quot;ds-markdown-paragraph&quot;,&quot;style&quot;:&quot;margin: 13.716px 0px; font-size: 16.002px; line-height: 28.575px; color: rgb(64, 64, 64); font-family: quote-cjk-patch, Inter, system-ui, -apple-system, BlinkMacSystemFont, \\&quot;Segoe UI\\&quot;, Roboto, \\&quot;Noto Sans\\&quot;, Ubuntu, Cantarell, \\&quot;Helvetica Neue\\&quot;, Oxygen, \\&quot;Open Sans\\&quot;, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;,&quot;data-pm-slice&quot;:&quot;0 0 []&quot;},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;},&quot;para&quot;,null]\">需要完全重新安装</span></span></h3><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"bash\"><code><span leaf=\"\">sudo apt purge docker-ce*</span></code><code><span leaf=\"\">sudo&nbsp;<span class=\"code-snippet__built_in\">rm</span>&nbsp;-rf /var/lib/docker</span></code><code><span leaf=\"\">sudo apt autoremove</span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 然后重新按照上面步骤安装</span></span></code></pre></section><h3 style=\"font-weight: 600;font-size: 18.288px;line-height: 1.5;margin: 18.288px 0px 13.716px;color: rgb(64, 64, 64);font-family: quote-cjk-patch, Inter, system-ui, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Noto Sans&quot;, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, Oxygen, &quot;Open Sans&quot;, sans-serif;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;\" data-pm-slice=\"0 0 []\"><span leaf=\"\"><br></span></h3><section><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: bold;\">2.2 Ubuntu系统环境安装Docker</span></span></section><section><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: normal;\">官方下载安装脚本</span></span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"powershell\"><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 下载并执行Docker官方安装脚本</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__built_in\">curl</span>&nbsp;<span class=\"code-snippet__literal\">-fsSL</span>&nbsp;https://get.docker.com&nbsp;<span class=\"code-snippet__literal\">-o</span>&nbsp;<span class=\"code-snippet__built_in\">get-docker</span>.sh</span></code><code><span leaf=\"\">sudo sh&nbsp;<span class=\"code-snippet__built_in\">get-docker</span>.sh</span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 启动Docker服务</span></span></code><code><span leaf=\"\">sudo systemctl&nbsp;<span class=\"code-snippet__built_in\">start</span>&nbsp;docker</span></code><code><span leaf=\"\">sudo systemctl enable docker</span></code><code><span leaf=\"\"><br></span></code></pre></section><section><span leaf=\"\"><br></span></section><section><section><span leaf=\"\" mpa-font-style=\"mdl89a2p13b5\" style=\"font-size: 20px;\" data-mpa-action-id=\"mdl89a2vxbr\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;section&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]\"><span textstyle=\"\" style=\"color: rgb(0, 128, 255);font-weight: bold;\">3. Docker代理配置</span></span></section></section><hr style=\"border-style: solid;border-width: 1px 0 0;border-color: rgba(0,0,0,0.1);-webkit-transform-origin: 0 0;-webkit-transform: scale(1, 0.5);transform-origin: 0 0;transform: scale(1, 0.5);\"><section><section><section><span leaf=\"\" mpa-font-style=\"mdl8lqnx1c83\" style=\"font-size: 17px;\" data-mpa-action-id=\"mdl8lqo41v39\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;section&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]\">有时候因为在网络问题拉取不了，需要配置docker代理服务解决</span></section></section></section><section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"bash\"><code><span leaf=\"\">sudo&nbsp;<span class=\"code-snippet__built_in\">mkdir</span>&nbsp;-p /etc/systemd/system/docker.service.d</span></code><code><span leaf=\"\">sudo&nbsp;<span class=\"code-snippet__built_in\">touch</span>&nbsp;/etc/systemd/system/docker.service.d/http-proxy.conf</span></code></pre></section></section><section><span leaf=\"\">然后在</span></section><section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"swift\"><code><span leaf=\"\">sudo vi&nbsp;<span class=\"code-snippet__regexp\">/etc/</span>systemd<span class=\"code-snippet__regexp\">/system/</span>docker.service.d<span class=\"code-snippet__operator\">/</span>http<span class=\"code-snippet__operator\">-</span>proxy.conf</span></code></pre></section></section><section><span leaf=\"\">在http-proxy.conf里面配置代理ip,&nbsp;注意一点，在WSL环境里，&nbsp;一定要注意这里的代理ip地址会不会自动发生变化，如果代理ip变了要及时修改。&nbsp;不然容易docker了老半天都连不上去</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"ini\"><code><span leaf=\"\"><span class=\"code-snippet__section\">[Service]</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__attr\">Environment</span>=<span class=\"code-snippet__string\">\"HTTP_PROXY=http://服务端主机IP:VPN服务端口号\"</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__attr\">Environment</span>=<span class=\"code-snippet__string\">\"HTTPS_PROXY=http://服务端主机IP:VPN服务端口号\"</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__attr\">Environment</span>=<span class=\"code-snippet__string\">\"NO_PROXY=localhost,127.0.0.1\"</span></span></code><code><span leaf=\"\"><br></span></code></pre></section><section><section><span leaf=\"\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;section&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]\">重新加载docker代理配置 + 重启docker服务</span></section></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"nginx\"><code><span leaf=\"\"><span class=\"code-snippet__attribute\">sudo</span>&nbsp;systemctl daemon-reload</span></code><code><span leaf=\"\">sudo systemctl restart docker</span></code></pre></section><section><span leaf=\"\">docker 测试</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"nginx\"><code><span leaf=\"\"><span class=\"code-snippet__attribute\">docker</span>&nbsp;pull ubuntu</span></code></pre></section><section style=\"text-align: center;\" nodeleaf=\"\"><img data-src=\"https://mmbiz.qpic.cn/sz_mmbiz_png/wzA5piakzWmAO3cqCFA3A3lxzaJiceqhiaO6ElaENicxvcbqSsJ60FU2McgDrQGFXbqThKPe1XeX7l4t7foAxIicCRw/640?wx_fmt=png&amp;from=appmsg&amp;watermark=1#imgIndex=2\" class=\"rich_pages wxw-img js_img_placeholder wx_img_placeholder\" data-ratio=\"0.1824074074074074\" data-s=\"300,640\" data-type=\"png\" data-w=\"1080\" type=\"block\" data-imgfileid=\"100000068\" data-original-style=\"null\" data-index=\"3\" src=\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E\" _width=\"677px\" style=\"width: 677px !important; height: 123.49px !important;\" alt=\"图片\"></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"bash\"><code><span leaf=\"\"><span class=\"code-snippet__comment\">#查看docker image</span></span></code><code><span leaf=\"\">docker image&nbsp;<span class=\"code-snippet__built_in\">ls</span></span></code></pre></section><section style=\"text-align: center;\" nodeleaf=\"\"><img data-src=\"https://mmbiz.qpic.cn/sz_mmbiz_png/wzA5piakzWmAO3cqCFA3A3lxzaJiceqhiaO2hJajiciaicia9erMj05G0R7T6Tiaq6IcqTicgN4hwkuImb6ia9pWJBMq4ALA/640?wx_fmt=png&amp;from=appmsg&amp;watermark=1#imgIndex=3\" class=\"rich_pages wxw-img js_img_placeholder wx_img_placeholder\" data-ratio=\"0.13043478260869565\" data-s=\"300,640\" data-type=\"png\" data-w=\"943\" type=\"block\" data-imgfileid=\"100000069\" data-original-style=\"null\" data-index=\"4\" src=\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E\" _width=\"677px\" style=\"width: 677px !important; height: 88.3043px !important;\" alt=\"图片\"></section><section><span leaf=\"\"><br></span></section><section><span leaf=\"\">校验代理是否生效</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"nginx\"><code><span leaf=\"\"><span class=\"code-snippet__attribute\">docker</span>&nbsp;<span class=\"code-snippet__literal\">info</span>&nbsp;| grep -i proxy</span></code></pre></section><section><span leaf=\"\">关闭代理</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"bash\"><code><span leaf=\"\"><span class=\"code-snippet__built_in\">unset</span>&nbsp;HTTP_PROXY HTTPS_PROXY</span></code><code><span leaf=\"\">docker build -t your-image-name .</span></code></pre></section><section><span leaf=\"\"><br></span></section><section><span leaf=\"\" mpa-font-style=\"mdl89a2p13b5\" style=\"font-size: 20px;\" data-mpa-action-id=\"mdl89a2vxbr\" data-pm-slice=\"0 0 []\"><span textstyle=\"\" style=\"color: rgb(0, 128, 255);font-weight: bold;\">4. Docker命令学习</span></span></section><hr style=\"border-style: solid;border-width: 1px 0 0;border-color: rgba(0,0,0,0.1);-webkit-transform-origin: 0 0;-webkit-transform: scale(1, 0.5);transform-origin: 0 0;transform: scale(1, 0.5);\"><ul style=\"list-style-type: circle;\" class=\"list-paddingleft-1\"></ul><ul class=\"list-paddingleft-1\"><li><section><code style=\"border: 0px;margin: 0px;padding: 0px;\"><span leaf=\"\"><span textstyle=\"\" style=\"font-size: 17px;\">docker run 运行容器</span></span></code></section></li><li><code style=\"border: 0px;margin: 0px;padding: 0px;\"><span leaf=\"\"><span textstyle=\"\" style=\"font-size: 17px;\">docker ps 列出正在运行的容器</span></span></code></li><li><code style=\"border: 0px;margin: 0px;padding: 0px;\"><span leaf=\"\"><span textstyle=\"\" style=\"font-size: 17px;\">docker build 构建 Docker 镜像</span></span></code></li><li><code style=\"border: 0px;margin: 0px;padding: 0px;\"><span leaf=\"\"><span textstyle=\"\" style=\"font-size: 17px;\">docker exec 在容器中执行命令</span></span></code></li><li><code style=\"border: 0px;margin: 0px;padding: 0px;\"><span leaf=\"\"><span textstyle=\"\" style=\"font-size: 17px;\">这里我偷点懒，可以自己去问问Deepseek更多docker命令<img data-src=\"https://res.wx.qq.com/t/wx_fed/we-emoji/res/assets/newemoji/Yellowdog.png#imgIndex=4\" class=\"rich_pages wxw-img js_img_placeholder wx_img_placeholder\" data-ratio=\"1\" data-w=\"128\" style=\"display: inline-block; vertical-align: middle; background-size: cover; width: 20px !important; height: 20px !important;\" data-original-style=\"display:inline-block;width:20px;vertical-align:middle;background-size:cover;\" data-index=\"5\" src=\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E\" _width=\"20px\" alt=\"图片\"><img class=\"rich_pages wxw-img\" data-src=\"\"></span></span></code></li></ul><section><span leaf=\"\"><br></span></section><section><section><span leaf=\"\" mpa-font-style=\"mdl89a2p13b5\" style=\"font-size: 20px;\" data-mpa-action-id=\"mdl89a2vxbr\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;section&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]\"><span textstyle=\"\" style=\"color: rgb(0, 128, 255);font-weight: bold;\">5. 配置自己的Docker镜像</span></span></section></section><p><span leaf=\"\">Dockerfile 是一个文本文件，包含了构建 Docker 镜像的所有指令, docker怎么构建的配置都写到dockerfile里面。</span></p><section><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: bold;\">5.1 Dockerfile 例子</span></span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"bash\"><code><span leaf=\"\">FROM nginx</span></code><code><span leaf=\"\">RUN&nbsp;<span class=\"code-snippet__built_in\">echo</span>&nbsp;<span class=\"code-snippet__string\">'这是一个本地构建的nginx镜像'</span>&nbsp;&gt; /usr/share/nginx/html/index.html</span></code></pre></section><section><span leaf=\"\">构建自己的docker镜像</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"nginx\"><code><span leaf=\"\"><span class=\"code-snippet__attribute\">docker</span>&nbsp;build -t nginx:v3 .</span></code></pre></section><section><span leaf=\"\">运行自己的镜像</span></section><section><span leaf=\"\">-p 代表实例的端口映射， 8080代表本机端口， 80代表container程序自己内部端口。&nbsp;</span></section><section><span leaf=\"\">-d 代表后台运行实例</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"apache\"><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 启动容器（带端口映射）</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">docker</span>&nbsp;run -d -p&nbsp;<span class=\"code-snippet__number\">8080</span>:<span class=\"code-snippet__number\">80</span>&nbsp;--name my-nginx nginx:v3</span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 验证访问</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">curl</span>&nbsp;-I http://localhost:<span class=\"code-snippet__number\">8080</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 应返回 HTTP 200 响应</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 查看日志</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">docker</span>&nbsp;logs my-nginx</span></code></pre></section><section><span leaf=\"\">run之后 会创建container 实例, 可以通过 下面语句查看container</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"nginx\"><code><span leaf=\"\"><span class=\"code-snippet__attribute\">docker</span>&nbsp;ps</span></code></pre></section><section style=\"text-align: center;\" nodeleaf=\"\"><img data-src=\"https://mmbiz.qpic.cn/sz_mmbiz_png/wzA5piakzWmAO3cqCFA3A3lxzaJiceqhiaOR5XTDboETKAMbias2Chd3kHNT8JfJPKuW0tS6SIooINicFVJgMmUmZdw/640?wx_fmt=png&amp;from=appmsg#imgIndex=6\" class=\"rich_pages wxw-img js_img_placeholder wx_img_placeholder\" data-ratio=\"0.075\" data-s=\"300,640\" data-type=\"png\" data-w=\"1080\" type=\"block\" data-imgfileid=\"100000070\" data-original-style=\"null\" data-index=\"7\" src=\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E\" _width=\"677px\" style=\"width: 677px !important; height: 50.775px !important;\" alt=\"图片\"></section><section><span leaf=\"\">查看结果</span></section><section style=\"text-align: center;\" nodeleaf=\"\"><img data-src=\"https://mmbiz.qpic.cn/sz_mmbiz_png/wzA5piakzWmAO3cqCFA3A3lxzaJiceqhiaOIKibuiaB76nhDSbAnLPLicGZDYUtg4qlS4uAlNQ4ibu7l2trp5ZXxFoQRQ/640?wx_fmt=png&amp;from=appmsg&amp;watermark=1#imgIndex=7\" class=\"rich_pages wxw-img js_img_placeholder wx_img_placeholder\" data-ratio=\"0.4380053908355795\" data-s=\"300,640\" data-type=\"png\" data-w=\"742\" style=\"width: 483px !important; height: 211.557px !important;\" type=\"block\" data-imgfileid=\"100000071\" data-original-style=\"width:483px;height:212px;\" data-index=\"8\" src=\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E\" _width=\"483px\" alt=\"图片\"></section><section><span leaf=\"\"><br></span></section><section><span leaf=\"\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;section&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]\"><span textstyle=\"\" style=\"font-weight: bold;\">5.2 代理问题</span></span></section><section><span leaf=\"\">如果遇到下面报错， 那就大概率是docker跑的时候因为网络问题访问不了镜像仓库。</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"perl\"><code><span leaf=\"\">ERROR: failed to solve: failed to fetch anonymous token: Get&nbsp;<span class=\"code-snippet__string\">\"https://auth.docker.io/token?scope=repository%3Alibrary%2Fnginx%3Apull&amp;service=registry.docker.io\"</span>: proxyconnect tcp: dial tcp 你的ip:<span class=\"code-snippet__number\">7890</span>:&nbsp;<span class=\"code-snippet__keyword\">connect</span>:&nbsp;<span class=\"code-snippet__keyword\">no</span>&nbsp;route to host</span></code></pre></section><section><span leaf=\"\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;section&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]\">解决方法是要么本地开代理先把镜像拉下来再build</span><span leaf=\"\">或者在dockerfile 指定代理地址</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"nginx\"><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 声明构建参数（代理地址）</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">ARG</span>&nbsp;HTTP_PROXY</span></code><code><span leaf=\"\">ARG HTTPS_PROXY</span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 将代理参数转为环境变量（可选）</span></span></code><code><span leaf=\"\">ENV HTTP_PROXY=<span class=\"code-snippet__variable\">${HTTP_PROXY}</span></span></code><code><span leaf=\"\">ENV HTTPS_PROXY=<span class=\"code-snippet__variable\">${HTTPS_PROXY}</span></span></code></pre></section><section><span leaf=\"\">然后build的时候把代理ip传参进去</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"nginx\"><code><span leaf=\"\"><span class=\"code-snippet__attribute\">docker</span>&nbsp;build \\</span></code><code><span leaf=\"\">&nbsp; --build-arg HTTP_PROXY=<span class=\"code-snippet__string\">\"http://&lt;代理ip&gt;:7890\"</span>&nbsp;\\</span></code><code><span leaf=\"\">&nbsp; --build-arg HTTPS_PROXY=<span class=\"code-snippet__string\">\"http://&lt;代理ip&gt;:7890\"</span>&nbsp;\\</span></code><code><span leaf=\"\">&nbsp; -t my-app .</span></code></pre></section><section><span leaf=\"\"><br></span></section><section><span leaf=\"\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;section&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]\"><span textstyle=\"\" style=\"font-weight: bold;\">5.3 拉取git 私有库例子</span></span></section><section><span leaf=\"\">要拉取git私有库的话一般需要用到ssh key， 这里需要定义ssh key变量然后从 build的时候传参进去</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"bash\"><code><span leaf=\"\">FROM python:3.10-slim</span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 安装 Git 和 SSH 客户端</span></span></code><code><span leaf=\"\">RUN apt-get update &amp;&amp; \\</span></code><code><span leaf=\"\">&nbsp; &nbsp; apt-get install -y --no-install-recommends git openssh-client &amp;&amp; \\</span></code><code><span leaf=\"\">&nbsp; &nbsp;&nbsp;<span class=\"code-snippet__built_in\">rm</span>&nbsp;-rf /var/lib/apt/lists/*</span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 配置 SSH 代理（通过 build-arg 传入密钥）</span></span></code><code><span leaf=\"\">ARG SSH_PRIVATE_KEY</span></code><code><span leaf=\"\">RUN&nbsp;<span class=\"code-snippet__built_in\">mkdir</span>&nbsp;-p ~/.ssh &amp;&amp; \\</span></code><code><span leaf=\"\">&nbsp; &nbsp;&nbsp;<span class=\"code-snippet__built_in\">echo</span>&nbsp;<span class=\"code-snippet__string\">\"</span><span class=\"code-snippet__string\"><span class=\"code-snippet__variable\">${SSH_PRIVATE_KEY}</span></span><span class=\"code-snippet__string\">\"</span>&nbsp;&gt; ~/.ssh/id_rsa &amp;&amp; \\</span></code><code><span leaf=\"\">&nbsp; &nbsp;&nbsp;<span class=\"code-snippet__built_in\">chmod</span>&nbsp;600 ~/.ssh/id_rsa &amp;&amp; \\</span></code><code><span leaf=\"\">&nbsp; &nbsp; ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 克隆私有仓库</span></span></code><code><span leaf=\"\">RUN git&nbsp;<span class=\"code-snippet__built_in\">clone</span>&nbsp;git@github.com:your/private-repo.git /app</span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 后续步骤...</span></span></code></pre></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"bash\"><code><span leaf=\"\">docker build \\</span></code><code><span leaf=\"\">&nbsp; --build-arg SSH_PRIVATE_KEY=<span class=\"code-snippet__string\">\"</span><span class=\"code-snippet__string\"><span class=\"code-snippet__subst\">$(cat ~/.ssh/id_rsa)</span></span><span class=\"code-snippet__string\">\"</span>&nbsp;\\</span></code><code><span leaf=\"\">&nbsp; --build-arg HTTP_PROXY=<span class=\"code-snippet__string\">\"http://127.0.0.1:7890\"</span>&nbsp;\\</span></code><code><span leaf=\"\">&nbsp; -t private-app .</span></code></pre></section><section><span leaf=\"\"><br></span></section><section><span leaf=\"\" mpa-font-style=\"mdl89a2p13b5\" style=\"font-size: 20px;\" data-mpa-action-id=\"mdl89a2vxbr\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;section&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;},&quot;para&quot;,{&quot;tagName&quot;:&quot;section&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]\"><span textstyle=\"\" style=\"color: rgb(0, 128, 255);font-weight: bold;\">6. Docker-Compose 搭建自己多个服务</span></span></section><hr style=\"border-style: solid;border-width: 1px 0 0;border-color: rgba(0,0,0,0.1);-webkit-transform-origin: 0 0;-webkit-transform: scale(1, 0.5);transform-origin: 0 0;transform: scale(1, 0.5);\"><section><span mpa-font-style=\"mdl89a2p13b5\" style=\"font-size: 20px;\" data-mpa-action-id=\"mdl89a2vxbr\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;section&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;},&quot;para&quot;,{&quot;tagName&quot;:&quot;section&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]\"><span style=\"font-size: 17px;\" mpa-font-style=\"mdlojb0z20g4\"><span leaf=\"\">Dockerfile镜像搭建的是单个服务， 如果要同时搭建多个服务， 比如一个容器负责web端，一个容器负责SQL数据库， 还有一个负责redis， 那么就需要用到Docker-Compose去管理。</span></span></span></section><section><span style=\"color: rgb(51, 51, 51);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif;font-size: 14px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(250, 252, 253);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;display: inline !important;float: none;\" data-pm-slice=\"0 0 []\"><span style=\"font-size: 17px;\" mpa-font-style=\"mdlhp3pm1lho\"><span style=\"font-size: 17px;\" mpa-font-style=\"mdlojb0zjur\"><span leaf=\"\">&nbsp;Compose&nbsp;</span></span><span leaf=\"\">是用于定义和运行多容器 Docker 应用程序的工具。可以简单通过YML 文件来配置应用程序需要的所有服务。</span></span></span></section><section><span style=\"color: rgb(51, 51, 51);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif;font-size: 14px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(250, 252, 253);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;display: inline !important;float: none;\" data-pm-slice=\"0 0 []\"><span style=\"font-size: 17px;\" mpa-font-style=\"mdlhp3pm1lho\"><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: bold;\">6.1 下载docker-compose</span></span></span></span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"cs\"><code><span leaf=\"\">&nbsp;sudo apt-<span class=\"code-snippet__keyword\">get</span>&nbsp;install docker-compose</span></code></pre></section><section><span style=\"color: rgb(51, 51, 51);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif;font-size: 14px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(250, 252, 253);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;display: inline !important;float: none;\" data-pm-slice=\"0 0 []\"><span style=\"font-size: 17px;\" mpa-font-style=\"mdlhp3pm1lho\"><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: normal;\">遇到网络问题， 可以换成阿里云镜像下载试试</span></span></span></span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"bash\"><code><span leaf=\"\"><span class=\"code-snippet__comment\">#官方镜像</span></span></code><code><span leaf=\"\">sudo curl -L&nbsp;<span class=\"code-snippet__string\">\"https://github.com/docker/compose/releases/latest/download/docker-compose-</span><span class=\"code-snippet__string\"><span class=\"code-snippet__subst\">$(uname -s)</span></span><span class=\"code-snippet__string\">-</span><span class=\"code-snippet__string\"><span class=\"code-snippet__subst\">$(uname -m)</span></span><span class=\"code-snippet__string\">\"</span>&nbsp;-o /usr/local/bin/docker-compose</span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\">sudo&nbsp;<span class=\"code-snippet__built_in\">chmod</span>&nbsp;+x /usr/local/bin/docker-compose</span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\">#国内镜像</span></span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\">sudo curl -L&nbsp;<span class=\"code-snippet__string\">\"https://mirrors.aliyun.com/docker-toolbox/linux/compose/latest/docker-compose-</span><span class=\"code-snippet__string\"><span class=\"code-snippet__subst\">$(uname -s)</span></span><span class=\"code-snippet__string\">-</span><span class=\"code-snippet__string\"><span class=\"code-snippet__subst\">$(uname -m)</span></span><span class=\"code-snippet__string\">\"</span>&nbsp;-o /usr/local/bin/docker-compose</span></code></pre></section><section><span leaf=\"\"><br></span></section><section><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: bold;\">6.2 下面以Redis 请求例子为例</span></span></section><section><span leaf=\"\">先拉取docker依赖的基础python 环境</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"apache\"><code><span leaf=\"\">&nbsp;<span class=\"code-snippet__attribute\">docker</span>&nbsp;pull python:<span class=\"code-snippet__number\">3</span>.<span class=\"code-snippet__number\">9</span>-slim</span></code></pre></section><section><span leaf=\"\"><br></span></section><section><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: bold;\">创建自己的代码</span></span></section><section><span leaf=\"\">项目目录结构如下</span></section><section><span leaf=\"\">其中调用关系:&nbsp;</span></section><ul style=\"list-style-type: disc;\" class=\"list-paddingleft-1\"><li><section><span leaf=\"\">docker-compose 调用docker-compose.yml</span></section></li><li><section><span leaf=\"\">docker-compose.yml里面&nbsp;<span textstyle=\"\" style=\"font-style: italic;\">web&nbsp;</span>服务里的<span textstyle=\"\" style=\"font-style: italic;\">&nbsp;build .</span>&nbsp;会依赖 ./Dockerfile 文件去构建app.py 的python服务</span></section></li><li><section><span leaf=\"\">web服务通过&nbsp;<span textstyle=\"\" style=\"font-style: italic;\">depends_on&nbsp;</span>依赖 redis 服务</span></section></li><li><section><span leaf=\"\">redis服务依赖镜像: redis:alpine</span></section></li></ul><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"\"><code><span leaf=\"\">myapp/</span></code><code><span leaf=\"\">├── app.py</span></code><code><span leaf=\"\">├── requirements.txt</span></code><code><span leaf=\"\">├── Dockerfile</span></code><code><span leaf=\"\">└── docker-compose.yml</span></code></pre></section><section><span leaf=\"\">进入myapp 文件后生成下下面的文件</span></section><section><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: normal;\">docker-compose.yml</span></span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"makefile\"><code><span leaf=\"\"><span class=\"code-snippet__section\">services:</span></span></code><code><span leaf=\"\">&nbsp; web:</span></code><code><span leaf=\"\">&nbsp; &nbsp; build: .</span></code><code><span leaf=\"\">&nbsp; &nbsp; ports:</span></code><code><span leaf=\"\">&nbsp; &nbsp; &nbsp; -&nbsp;<span class=\"code-snippet__string\">\"5000:5000\"</span></span></code><code><span leaf=\"\">&nbsp; &nbsp; depends_on:</span></code><code><span leaf=\"\">&nbsp; &nbsp; &nbsp; - redis</span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\">&nbsp; redis:</span></code><code><span leaf=\"\">&nbsp; &nbsp; image: redis:alpine</span></code><code><span leaf=\"\">&nbsp; &nbsp; volumes:</span></code><code><span leaf=\"\">&nbsp; &nbsp; &nbsp; - redis_data:/data</span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\"><span class=\"code-snippet__section\">volumes:</span></span></code><code><span leaf=\"\">&nbsp; redis_data:</span></code></pre></section><section><span leaf=\"\">服务器文件app.py</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"python\"><code><span leaf=\"\"><span class=\"code-snippet__keyword\">from</span>&nbsp;flask&nbsp;<span class=\"code-snippet__keyword\">import</span>&nbsp;Flask</span></code><code><span leaf=\"\"><span class=\"code-snippet__keyword\">import</span>&nbsp;redis</span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\">app = Flask(__name__)</span></code><code><span leaf=\"\">cache = redis.Redis(host=<span class=\"code-snippet__string\">'redis'</span>, port=<span class=\"code-snippet__number\">6379</span>)</span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\"><span class=\"code-snippet__meta\">@app.route(</span><span class=\"code-snippet__meta\"><span class=\"code-snippet__params\"><span class=\"code-snippet__string\">'/'</span></span></span><span class=\"code-snippet__meta\">)</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__keyword\">def</span>&nbsp;<span class=\"code-snippet__title\">hello</span>():</span></code><code><span leaf=\"\">&nbsp; &nbsp; count = cache.incr(<span class=\"code-snippet__string\">'hits'</span>)</span></code><code><span leaf=\"\">&nbsp; &nbsp;&nbsp;<span class=\"code-snippet__keyword\">return</span>&nbsp;<span class=\"code-snippet__string\">f'Hello! 访问次数:&nbsp;</span><span class=\"code-snippet__string\"><span class=\"code-snippet__subst\">{count}</span></span><span class=\"code-snippet__string\">'</span></span></code></pre></section><section><span leaf=\"\">requirements.txt</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"nginx\"><code><span leaf=\"\"><span class=\"code-snippet__attribute\">flask</span></span></code><code><span leaf=\"\">redis</span></code></pre></section><section><span leaf=\"\">Dockerfile文件</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"sql\"><code><span leaf=\"\"><span class=\"code-snippet__keyword\">FROM</span>&nbsp;python:<span class=\"code-snippet__number\">3.9</span><span class=\"code-snippet__operator\">-</span>slim</span></code><code><span leaf=\"\">WORKDIR&nbsp;<span class=\"code-snippet__operator\">/</span>app</span></code><code><span leaf=\"\"><span class=\"code-snippet__keyword\">COPY</span>&nbsp;requirements.txt .</span></code><code><span leaf=\"\">RUN pip install&nbsp;<span class=\"code-snippet__operator\">-</span>r requirements.txt</span></code><code><span leaf=\"\"><span class=\"code-snippet__keyword\">COPY</span>&nbsp;. .</span></code><code><span leaf=\"\">CMD [\"gunicorn\", \"-b\", \"0.0.0.0:5000\", \"app:app\"]</span></code></pre></section><section><span leaf=\"\"><br></span></section><section><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: bold;\">Docker-compose启动服务</span></span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"powershell\"><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 启动服务</span></span></code><code><span leaf=\"\">docker<span class=\"code-snippet__literal\">-compose</span>&nbsp;up&nbsp;<span class=\"code-snippet__literal\">-d</span></span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 查看运行状态</span></span></code><code><span leaf=\"\">docker<span class=\"code-snippet__literal\">-compose</span>&nbsp;<span class=\"code-snippet__built_in\">ps</span></span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 测试访问</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__built_in\">curl</span>&nbsp;http://localhost:<span class=\"code-snippet__number\">5000</span></span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 停止服务</span></span></code><code><span leaf=\"\">docker<span class=\"code-snippet__literal\">-compose</span>&nbsp;down</span></code></pre></section><section><span leaf=\"\">如果docker构建期间出现问题， 修复代码问题后通过下面命令重启</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"css\"><code><span leaf=\"\">docker-compose down &amp;&amp; docker-compose build&nbsp;<span class=\"code-snippet__attr\">--no-cache</span>&nbsp;&amp;&amp; docker-compose up</span></code></pre></section><section><span leaf=\"\">构建完成截图</span></section><section style=\"text-align: center;\" nodeleaf=\"\"><img data-src=\"https://mmbiz.qpic.cn/sz_mmbiz_png/wzA5piakzWmAO3cqCFA3A3lxzaJiceqhiaOCp5LW8ahiaR4mYZJkT3gXjour9RlFymrEHxk108ibYvVOAibwPrdupbNA/640?wx_fmt=png&amp;from=appmsg&amp;watermark=1#imgIndex=8\" class=\"rich_pages wxw-img js_img_placeholder wx_img_placeholder\" data-ratio=\"0.3212962962962963\" data-s=\"300,640\" data-type=\"png\" data-w=\"1080\" type=\"block\" data-imgfileid=\"100000072\" data-original-style=\"null\" data-index=\"9\" src=\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E\" _width=\"677px\" style=\"width: 677px !important; height: 217.518px !important;\" alt=\"图片\"></section><section style=\"text-align: center;\" nodeleaf=\"\"><img data-src=\"https://mmbiz.qpic.cn/sz_mmbiz_png/wzA5piakzWmAO3cqCFA3A3lxzaJiceqhiaOjJOcSxOm59hnt5EknP0UiaO46apmYpYBdtt2kMNIyIfC3Sdoq0nSOPQ/640?wx_fmt=png&amp;from=appmsg&amp;watermark=1#imgIndex=9\" class=\"rich_pages wxw-img js_img_placeholder wx_img_placeholder\" data-ratio=\"0.37592592592592594\" data-s=\"300,640\" data-type=\"png\" data-w=\"1080\" type=\"block\" data-imgfileid=\"100000073\" data-original-style=\"null\" data-index=\"10\" src=\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E\" _width=\"677px\" style=\"width: 677px !important; height: 254.502px !important;\" alt=\"图片\"></section><section><span leaf=\"\">服务起来后， 查看各个容器的IP</span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"perl\"><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 列出所有容器及其IP</span></span></code><code><span leaf=\"\">docker ps -<span class=\"code-snippet__string\">q | xargs -n 1 docker inspect -f '{{.Name}} {{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' |</span>&nbsp;sed&nbsp;<span class=\"code-snippet__string\">'s#^/##'</span></span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 示例输出：</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># container1 172.17.0.2</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__comment\"># container2 172.18.0.3</span></span></code></pre></section><section style=\"text-align: center;\" nodeleaf=\"\"><img data-src=\"https://mmbiz.qpic.cn/sz_mmbiz_png/wzA5piakzWmAO3cqCFA3A3lxzaJiceqhiaO34K5iceoOP8jR427PYMezHY8yMEutNulNzw2wcahfh4icHHr22iczRo7A/640?wx_fmt=png&amp;from=appmsg#imgIndex=10\" class=\"rich_pages wxw-img js_img_placeholder wx_img_placeholder\" data-ratio=\"0.075\" data-s=\"300,640\" data-type=\"png\" data-w=\"1080\" type=\"block\" data-imgfileid=\"100000076\" data-original-style=\"null\" data-index=\"11\" src=\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E\" _width=\"677px\" style=\"width: 677px !important; height: 50.775px !important;\" alt=\"图片\"></section><section><span leaf=\"\"><br></span><span style=\"color: rgb(51, 51, 51);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif;font-size: 14px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(250, 252, 253);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;display: inline !important;float: none;\" data-pm-slice=\"0 0 []\"><span style=\"font-size: 17px;\" mpa-font-style=\"mdlhp3pm1lho\"><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: bold;\">服务测试</span></span></span></span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"javascript\"><code><span leaf=\"\">curl&nbsp;<span class=\"code-snippet__attr\">http</span>:<span class=\"code-snippet__comment\">//localhost:5000</span></span></code></pre></section><section><section><span style=\"color: rgb(51, 51, 51);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif;font-size: 14px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(250, 252, 253);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;display: inline !important;float: none;\" data-pm-slice=\"0 0 []\"><span style=\"font-size: 17px;\" mpa-font-style=\"mdlhp3pm1lho\"><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: normal;\">curl 请求一下绑定的端口，成功了</span></span></span></span></section><section><span style=\"color: rgb(51, 51, 51);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif;font-size: 14px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(250, 252, 253);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;display: inline !important;float: none;\" data-pm-slice=\"0 0 []\"><span style=\"font-size: 17px;\" mpa-font-style=\"mdlhp3pm1lho\"><span leaf=\"\"><img data-src=\"https://mmbiz.qpic.cn/sz_mmbiz_png/wzA5piakzWmAO3cqCFA3A3lxzaJiceqhiaOAibNDxLfk4PRMz6TQSlgleU5kibyLOVU8fHE3oLhtzfZukVFBffiaJdvQ/640?wx_fmt=png&amp;from=appmsg&amp;watermark=1#imgIndex=11\" class=\"rich_pages wxw-img js_img_placeholder wx_img_placeholder\" data-ratio=\"0.1037037037037037\" data-s=\"300,640\" data-type=\"png\" data-w=\"1080\" type=\"block\" data-imgfileid=\"100000074\" data-original-style=\"null\" data-index=\"12\" src=\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E\" _width=\"677px\" style=\"width: 677px !important; height: 70.2074px !important;\" alt=\"图片\"><img class=\"rich_pages wxw-img\" data-src=\"\"></span></span></span></section></section><section><span style=\"color: rgb(51, 51, 51);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif;font-size: 14px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(250, 252, 253);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;display: inline !important;float: none;\" data-pm-slice=\"0 0 []\"><span style=\"font-size: 17px;\" mpa-font-style=\"mdlhp3pm1lho\"><span leaf=\"\"><span textstyle=\"\" style=\"font-weight: normal;\">进入容器里debug</span></span></span></span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"nginx\"><code><span leaf=\"\"><span class=\"code-snippet__comment\">#通过docker ps 查看容器</span></span></code><code><span leaf=\"\"><span class=\"code-snippet__attribute\">docker</span>&nbsp;ps</span></code></pre></section><section style=\"text-align: center;\" nodeleaf=\"\"><img data-src=\"https://mmbiz.qpic.cn/sz_mmbiz_png/wzA5piakzWmAO3cqCFA3A3lxzaJiceqhiaOcXIohlezicssA5tqDByLd2yDAI0WgdJH7JxOL22Poibb0KlV3cYPRibJQ/640?wx_fmt=png&amp;from=appmsg&amp;watermark=1#imgIndex=13\" class=\"rich_pages wxw-img js_img_placeholder wx_img_placeholder\" data-ratio=\"0.11851851851851852\" data-s=\"300,640\" data-type=\"png\" data-w=\"1080\" type=\"block\" data-imgfileid=\"100000075\" data-original-style=\"null\" data-index=\"14\" src=\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E\" _width=\"677px\" style=\"width: 677px !important; height: 80.237px !important;\" alt=\"图片\"></section><section><span style=\"color: rgb(51, 51, 51);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif;font-size: 14px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(250, 252, 253);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;display: inline !important;float: none;\" data-pm-slice=\"0 0 []\"><span style=\"font-size: 17px;\" mpa-font-style=\"mdlhp3pm1lho\"><span leaf=\"\"><br></span></span></span></section><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li></li><li></li><li></li></ul><pre class=\"code-snippet__js\" data-lang=\"bash\"><code><span leaf=\"\"><span class=\"code-snippet__comment\"># 通过 exec -it 进入互动模式进入 容器</span></span></code><code><span leaf=\"\"><br></span></code><code><span leaf=\"\">docker&nbsp;<span class=\"code-snippet__built_in\">exec</span>&nbsp;-it test_redis bash</span></code></pre></section><section style=\"text-align: center;\" nodeleaf=\"\"><img data-src=\"https://mmbiz.qpic.cn/sz_mmbiz_png/wzA5piakzWmAO3cqCFA3A3lxzaJiceqhiaOgMeibhQtA8uabHTKaS6jXZsnqib0joP909dDWO3iaiaLoXjmRAic1aGFMKQ/640?wx_fmt=png&amp;from=appmsg&amp;watermark=1#imgIndex=14\" class=\"rich_pages wxw-img js_img_placeholder wx_img_placeholder\" data-ratio=\"0.13055555555555556\" data-s=\"300,640\" data-type=\"png\" data-w=\"1080\" type=\"block\" data-imgfileid=\"100000080\" data-original-style=\"null\" data-index=\"15\" src=\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E\" _width=\"677px\" style=\"width: 677px !important; height: 88.3861px !important;\" alt=\"图片\"></section><section><span style=\"color: rgb(51, 51, 51);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif;font-size: 14px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(250, 252, 253);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;display: inline !important;float: none;\" data-pm-slice=\"0 0 []\"><span style=\"font-size: 17px;\" mpa-font-style=\"mdlhp3pm1lho\"><span leaf=\"\"><br></span></span></span></section><section><span style=\"color: rgb(51, 51, 51);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif;font-size: 14px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-align: start;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(250, 252, 253);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;display: inline !important;float: none;\" data-pm-slice=\"0 0 []\"><span style=\"font-size: 17px;\" mpa-font-style=\"mdlhp3pm1lho\"><span leaf=\"\"><br></span></span></span></section><section><section><span leaf=\"\" mpa-font-style=\"mdl89a2p13b5\" style=\"font-size: 20px;\" data-mpa-action-id=\"mdl89a2vxbr\" data-pm-slice=\"1 1 [&quot;para&quot;,{&quot;tagName&quot;:&quot;section&quot;,&quot;attributes&quot;:{},&quot;namespaceURI&quot;:&quot;http://www.w3.org/1999/xhtml&quot;}]\"><span textstyle=\"\" style=\"color: rgb(0, 128, 255);font-weight: bold;\">7. 参考</span></span></section></section><hr style=\"border-style: solid;border-width: 1px 0 0;border-color: rgba(0,0,0,0.1);-webkit-transform-origin: 0 0;-webkit-transform: scale(1, 0.5);transform-origin: 0 0;transform: scale(1, 0.5);\"><p><span leaf=\"\">https://www.runoob.com/docker/docker-compose.html</span></p><p><span leaf=\"\">https://cloud.tencent.com/developer/article/2242444</span></p><p><span leaf=\"\">https://www.runoob.com/docker/docker-image-usage.html</span></p><p style=\"margin-bottom: 0px;\"><span leaf=\"\">https://developer.aliyun.com/article/1582169</span></p><p style=\"display: none;\"><mp-style-type data-value=\"3\"></mp-style-type></p>",
  "success": true
}